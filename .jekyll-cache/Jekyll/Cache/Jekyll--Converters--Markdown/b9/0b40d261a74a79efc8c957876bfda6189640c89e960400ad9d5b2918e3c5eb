I"ÿ<p><img src="/assets/Well_Path_Simulator.jpg" alt="Title Image" /></p>

<p>This project is meant to be a fun demonstration of how we can use sensor data from a smart phone in such a way that emulates the real life application of directional drilling in oil &amp; gas wells. Basically, what I want to do is to pretend that I’m drilling a well with my phone in hand, manually controlling the trajectory with the end result being a 3-dimensional plot of the well path along with a set of its surveys. As a drilling engineer, I knew this was possible but had not seen anyone actually do it, so I decided to give it a try.</p>

<h2 id="sensor-streamer">Sensor Streamer</h2>

<p>I found an app called <a href="https://play.google.com/store/apps/details?id=cz.honzamrazek.sensorstreamer&amp;hl=en_US&amp;gl=US">SensorStreamer</a> for my old android phone. It can stream data from the phone’s magnetometers and accelerometers in real time via the local network over UDP in JSON format.</p>

<h2 id="reading-the-data-from-the-phone">Reading the data from the phone</h2>

<p>To read data from the device, I used the python <code class="language-plaintext highlighter-rouge">socket</code> module to listen for the data on a port that I specified in the app (8000). In the loop, I used the <code class="language-plaintext highlighter-rouge">recv</code> method to read the data. Depending on the buffer size, it sometimes sends in multiple records separated by a new line character <code class="language-plaintext highlighter-rouge">\n</code> so I split them out into a list and then filter the list to remove <code class="language-plaintext highlighter-rouge">None</code> values. The filter object remains iterable, so I can then load each of the json records from it.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">socket</span>
<span class="kn">import</span> <span class="nn">json</span>
<span class="kn">import</span> <span class="nn">time</span>

<span class="n">s</span> <span class="o">=</span> <span class="n">socket</span><span class="p">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="p">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="p">.</span><span class="n">SOCK_STREAM</span><span class="p">)</span>
<span class="c1">#IP Address of phone
</span><span class="n">host</span> <span class="o">=</span> <span class="s">"192.168.1.4"</span>
<span class="n">port</span> <span class="o">=</span> <span class="mi">8000</span>
<span class="n">buffer_size</span> <span class="o">=</span> <span class="mi">8024</span>
<span class="n">s</span><span class="p">.</span><span class="n">connect</span><span class="p">((</span><span class="n">host</span><span class="p">,</span> <span class="n">port</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Listening on %s:%s..."</span> <span class="o">%</span> <span class="p">(</span><span class="n">host</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">port</span><span class="p">)))</span>

<span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
    <span class="n">data</span> <span class="o">=</span> <span class="n">s</span><span class="p">.</span><span class="n">recv</span><span class="p">(</span><span class="n">buffer_size</span><span class="p">)</span>
    <span class="n">mylist</span> <span class="o">=</span> <span class="n">data</span><span class="p">.</span><span class="n">decode</span><span class="p">(</span><span class="s">'utf-8'</span><span class="p">).</span><span class="n">split</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
    <span class="n">mylist</span> <span class="o">=</span> <span class="nb">filter</span><span class="p">(</span><span class="bp">None</span><span class="p">,</span> <span class="n">mylist</span><span class="p">)</span> <span class="c1">#mylist is now a filter object
</span>
    <span class="k">for</span> <span class="n">rec</span> <span class="ow">in</span> <span class="n">mylist</span><span class="p">:</span>
        <span class="n">jdata</span> <span class="o">=</span> <span class="n">json</span><span class="p">.</span><span class="n">loads</span><span class="p">(</span><span class="n">rec</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="n">jdata</span><span class="p">)</span>
        <span class="n">time</span><span class="p">.</span><span class="n">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div></div>

<p>Testing this bit of code yields the following output. This is what the JSON records look like. The 3-axis magnetometer and accelerometer readings are included as a nested list in the JSON record.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Listening on 192.168.1.4:8000...
{'accelerometer': {'timestamp': 963062099480427, 'value': [0.08378601, -0.002380371, 9.730026]}, 'magneticField': {'timestamp': 963062117852009, 'value': [-20.129395, -6.564331, -49.739075]}}
{'accelerometer': {'timestamp': 963062290734089, 'value': [0.03590393, -0.07421875, 9.76355]}, 'magneticField': {'timestamp': 963062305352009, 'value': [-21.49353, -5.534363, -50.068665]}}
{'accelerometer': {'timestamp': 963062481987751, 'value': [-0.06463623, 0.007171631, 9.821014]}, 'magneticField': {'timestamp': 963062492852009, 'value': [-20.98236, -7.080078, -49.57428]}}
{'accelerometer': {'timestamp': 963062673271931, 'value': [0.08378601, -0.04069519, 9.662994]}, 'magneticField': {'timestamp': 963062680321492, 'value': [-22.175598, -5.534363, -50.39978]}}
{'accelerometer': {'timestamp': 963062864525593, 'value': [0.08857727, -0.04069519, 9.892838]}, 'magneticField': {'timestamp': 963062867821492, 'value': [-20.300293, -5.3634644, -49.243164]}}
{'accelerometer': {'timestamp': 963063055779255, 'value': [0.06942749, -0.03111267, 9.677353]}, 'magneticField': {'timestamp': 963063055321492, 'value': [-22.175598, -5.8776855, -49.739075]}}
</code></pre></div></div>

<h2 id="unpack-the-json-to-pandas-dataframe">Unpack the JSON to Pandas DataFrame</h2>

<p>My first instinct to use the pandas read_json() to read these records resulted in a dataframe with the following structure. I eventually gave up trying to deal with the dataframe in this format.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">In</span> <span class="p">[</span><span class="mi">13</span><span class="p">]:</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_json</span><span class="p">(</span><span class="n">rec</span><span class="p">)</span>
<span class="n">Out</span><span class="p">[</span><span class="mi">13</span><span class="p">]:</span>
                                         <span class="n">accelerometer</span>                       <span class="n">magneticField</span>
<span class="n">timestamp</span>                             <span class="mi">1048967249791200</span>                    <span class="mi">1048967333134706</span>
<span class="n">value</span>      <span class="p">[</span><span class="mf">0.04069519</span><span class="p">,</span> <span class="mf">0.08378601000000001</span><span class="p">,</span> <span class="mf">9.914383</span><span class="p">]</span>  <span class="p">[</span><span class="o">-</span><span class="mf">14.601135</span><span class="p">,</span> <span class="o">-</span><span class="mf">9.829712</span><span class="p">,</span> <span class="o">-</span><span class="mf">48.64044</span><span class="p">]</span>
</code></pre></div></div>

<p>Rather than try to solve this Rubik’s cube, I essentially just peeled the stickers off and put them in order by directly unpacking the json data into a dictionary and then generated the dataframe from there. See code block below:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">json_rec_to_df</span><span class="p">(</span><span class="n">df</span><span class="p">,</span> <span class="n">mylist</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">rec</span> <span class="ow">in</span> <span class="n">mylist</span><span class="p">:</span>
        <span class="n">jdata</span> <span class="o">=</span> <span class="n">json</span><span class="p">.</span><span class="n">loads</span><span class="p">(</span><span class="n">rec</span><span class="p">)</span>
        <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">([[</span><span class="n">jdata</span><span class="p">[</span><span class="s">'magneticField'</span><span class="p">][</span><span class="s">'timestamp'</span><span class="p">],</span> 
                            <span class="n">jdata</span><span class="p">[</span><span class="s">'magneticField'</span><span class="p">][</span><span class="s">'value'</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="mi">1000</span><span class="p">,</span>
                            <span class="n">jdata</span><span class="p">[</span><span class="s">'magneticField'</span><span class="p">][</span><span class="s">'value'</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="mi">1000</span><span class="p">,</span>
                            <span class="n">jdata</span><span class="p">[</span><span class="s">'magneticField'</span><span class="p">][</span><span class="s">'value'</span><span class="p">][</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="mi">1000</span><span class="p">,</span>
                            <span class="n">jdata</span><span class="p">[</span><span class="s">'accelerometer'</span><span class="p">][</span><span class="s">'timestamp'</span><span class="p">],</span>
                            <span class="n">jdata</span><span class="p">[</span><span class="s">'accelerometer'</span><span class="p">][</span><span class="s">'value'</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="p">(</span><span class="mi">1000</span><span class="o">/</span><span class="mf">9.80665</span><span class="p">),</span>
                            <span class="n">jdata</span><span class="p">[</span><span class="s">'accelerometer'</span><span class="p">][</span><span class="s">'value'</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="p">(</span><span class="mi">1000</span><span class="o">/</span><span class="mf">9.80665</span><span class="p">),</span>
                            <span class="n">jdata</span><span class="p">[</span><span class="s">'accelerometer'</span><span class="p">][</span><span class="s">'value'</span><span class="p">][</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="p">(</span><span class="mi">1000</span><span class="o">/</span><span class="mf">9.80665</span><span class="p">)]],</span>
                            <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">'btimestamp'</span><span class="p">,</span> <span class="s">'bx'</span><span class="p">,</span> <span class="s">'by'</span><span class="p">,</span> <span class="s">'bz'</span><span class="p">,</span>
                                     <span class="s">'gtimestamp'</span><span class="p">,</span> <span class="s">'gx'</span><span class="p">,</span> <span class="s">'gy'</span><span class="p">,</span> <span class="s">'gz'</span><span class="p">])</span>
    <span class="k">return</span> <span class="n">df</span>
</code></pre></div></div>

<p>This results in a much more user friendly dataframe with a separate column for each data point.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Out</span><span class="p">[</span><span class="mi">25</span><span class="p">]:</span>
         <span class="n">btimestamp</span>         <span class="n">bx</span>         <span class="n">by</span>         <span class="n">bz</span>        <span class="n">gtimestamp</span>          <span class="n">gx</span>          <span class="n">gy</span>         <span class="n">gz</span>
<span class="mi">0</span>  <span class="mi">1048879217758634</span>  <span class="mf">37123.108</span> <span class="o">-</span><span class="mf">34417.725</span> <span class="o">-</span><span class="mf">17448.425</span>  <span class="mi">1048879231277921</span> <span class="o">-</span><span class="mf">664.550433</span>  <span class="mf">559.081032</span>  <span class="mf">526.85545</span>
</code></pre></div></div>

<h2 id="survey-calculation">Survey Calculation</h2>

<p>To calculate the survey (the 3D orientation) involves a bit of magic. These formulas I picked up along-the-way in my previous career, but I should mention that the minimum curvature calculation is easily found with the google search terms “minimum curvature method”. These are the meat and potatoes of this script. The result is a directional survey in the format <code class="language-plaintext highlighter-rouge">MD INC AZI TVD NS EW DLS</code>, which is yielded from the raw 6-axis sensor values <code class="language-plaintext highlighter-rouge">bx by bz gx gy gz</code> from the device.</p>

<ul>
  <li><em>MD</em>: The measured depth, or distance in feet between survey stations</li>
  <li><em>INC</em>: The inclination of the survey in degrees.</li>
  <li><em>AZI</em>: The azimuth of the survey in degrees.</li>
  <li><em>TVD</em>: The true vertical depth of the survey in feet.</li>
  <li><em>NS</em>: The north/south displacement of the survey.</li>
  <li><em>EW</em>: The east/west displacement of the survey.</li>
  <li><em>DLS</em>: A combination of the change of inclination and azimuth, expressed in degrees per 100 ft.</li>
  <li><em>bx, by, bz</em>: The 3-axis magnetic field components, calculated in nano-Tesla.</li>
  <li><em>gx, gy, gz</em>: The 3-axis accelerometer (gravity) components, calculated in milli-G.</li>
  <li><em>G</em>: the magnitude of the gravitational vector, calculated in milli-G.</li>
  <li><em>B</em>: the total field of the magnetic field vector, also in nano-Tesla.</li>
</ul>

<p>In the script, I am using the <code class="language-plaintext highlighter-rouge">keyboard</code> module to scan for a key press on the space bar such that every time it is pressed, a new survey appears and is added to the list for minimum curvature calculation. Also, since I do not have any drill pipe in my house, I am going to pretend that the survey intervals (<code class="language-plaintext highlighter-rouge">MD</code>) are exactly 100 ft.</p>

<h2 id="example-well-path">Example Well Path</h2>

<p>Here is an example well path that I “drilled” by holding the phone in the desired orientation. Each dot on the plot represents a “survey” that was recorded when I pressed the space bar. First I started out by holding the phone vertical to keep the “surface hole” nice and straight. Then for the “intermediate” section, I increased the angle of the phone and held it there for a while. Finally, in the “production” section, I increased the angle to horizontal (around 90 degrees) while also making a slight turn here and there.</p>

<p><img src="/assets/wp_demo.jpg" alt="Example" /></p>

<p>Final surveys:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">In</span> <span class="p">[</span><span class="mi">30</span><span class="p">]:</span> <span class="n">df_final</span><span class="p">[[</span><span class="s">'MD'</span><span class="p">,</span> <span class="s">'INC'</span><span class="p">,</span> <span class="s">'AZI'</span><span class="p">,</span> <span class="s">'TVD'</span><span class="p">,</span> <span class="s">'DLS'</span><span class="p">,</span> <span class="s">'NS'</span><span class="p">,</span> <span class="s">'EW'</span><span class="p">]]</span>
<span class="n">Out</span><span class="p">[</span><span class="mi">30</span><span class="p">]:</span>
      <span class="n">MD</span>        <span class="n">INC</span>         <span class="n">AZI</span>          <span class="n">TVD</span>        <span class="n">DLS</span>           <span class="n">NS</span>           <span class="n">EW</span>
<span class="mi">0</span>    <span class="mi">100</span>   <span class="mf">2.976223</span>  <span class="mf">117.410004</span>          <span class="n">NaN</span>        <span class="n">NaN</span>          <span class="n">NaN</span>          <span class="n">NaN</span>
<span class="mi">0</span>    <span class="mi">200</span>   <span class="mf">2.680754</span>  <span class="mf">206.193120</span>   <span class="o">-</span><span class="mf">99.917662</span>   <span class="mf">3.962197</span>    <span class="o">-</span><span class="mf">3.294833</span>     <span class="mf">1.272906</span>
<span class="mi">0</span>    <span class="mi">300</span>   <span class="mf">5.296719</span>  <span class="mf">211.297818</span>  <span class="o">-</span><span class="mf">199.667057</span>   <span class="mf">2.637375</span>    <span class="o">-</span><span class="mf">9.338303</span>    <span class="o">-</span><span class="mf">2.157713</span>
<span class="mi">0</span>    <span class="mi">400</span>   <span class="mf">2.328175</span>  <span class="mf">209.103517</span>  <span class="o">-</span><span class="mf">299.434648</span>   <span class="mf">2.971585</span>   <span class="o">-</span><span class="mf">15.058292</span>    <span class="o">-</span><span class="mf">5.544188</span>
<span class="mi">0</span>    <span class="mi">500</span>   <span class="mf">4.227726</span>  <span class="mf">201.187211</span>  <span class="o">-</span><span class="mf">399.266940</span>   <span class="mf">1.948257</span>   <span class="o">-</span><span class="mf">20.270382</span>    <span class="o">-</span><span class="mf">7.864539</span>
<span class="p">..</span>   <span class="p">...</span>        <span class="p">...</span>         <span class="p">...</span>          <span class="p">...</span>        <span class="p">...</span>          <span class="p">...</span>          <span class="p">...</span>
<span class="mi">0</span>   <span class="mi">7400</span>  <span class="mf">89.459584</span>  <span class="mf">290.415884</span> <span class="o">-</span><span class="mf">4773.512982</span>  <span class="mf">32.801792</span>  <span class="mf">1509.208205</span> <span class="o">-</span><span class="mf">3076.418735</span>
<span class="mi">0</span>   <span class="mi">7500</span>  <span class="mf">90.369228</span>  <span class="mf">316.477383</span> <span class="o">-</span><span class="mf">4773.665001</span>  <span class="mf">26.077065</span>  <span class="mf">1563.849897</span> <span class="o">-</span><span class="mf">3159.140135</span>
<span class="mi">0</span>   <span class="mi">7600</span>  <span class="mf">90.584153</span>  <span class="mf">299.284380</span> <span class="o">-</span><span class="mf">4772.826730</span>  <span class="mf">17.193737</span>  <span class="mf">1625.019971</span> <span class="o">-</span><span class="mf">3237.770286</span>
<span class="mi">0</span>   <span class="mi">7700</span>  <span class="mf">90.616705</span>  <span class="mf">286.812028</span> <span class="o">-</span><span class="mf">4771.774646</span>  <span class="mf">12.471707</span>  <span class="mf">1664.091127</span> <span class="o">-</span><span class="mf">3329.601194</span>
<span class="mi">0</span>   <span class="mi">7800</span>  <span class="mf">90.413187</span>  <span class="mf">288.174885</span> <span class="o">-</span><span class="mf">4770.875865</span>   <span class="mf">1.377913</span>  <span class="mf">1694.148895</span> <span class="o">-</span><span class="mf">3424.970167</span>

<span class="p">[</span><span class="mi">78</span> <span class="n">rows</span> <span class="n">x</span> <span class="mi">7</span> <span class="n">columns</span><span class="p">]</span>
</code></pre></div></div>

<h2 id="complete-script">Complete Script</h2>

<p>See below for the complete script. Let me know if you try it out! In the future, I might input a real well plan and turn it into a directional drilling video game.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">socket</span>
<span class="kn">import</span> <span class="nn">json</span>
<span class="kn">import</span> <span class="nn">time</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">keyboard</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">from</span> <span class="nn">mpl_toolkits.mplot3d</span> <span class="kn">import</span> <span class="n">Axes3D</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="n">s</span> <span class="o">=</span> <span class="n">socket</span><span class="p">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="p">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="p">.</span><span class="n">SOCK_STREAM</span><span class="p">)</span>
<span class="n">host</span> <span class="o">=</span> <span class="s">"192.168.1.4"</span>
<span class="n">port</span> <span class="o">=</span> <span class="mi">8000</span>
<span class="n">buffer_size</span> <span class="o">=</span> <span class="mi">8024</span>
<span class="n">s</span><span class="p">.</span><span class="n">connect</span><span class="p">((</span><span class="n">host</span><span class="p">,</span> <span class="n">port</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Listening on %s:%s..."</span> <span class="o">%</span> <span class="p">(</span><span class="n">host</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">port</span><span class="p">)))</span>

<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">'btimestamp'</span><span class="p">,</span> <span class="s">'bx'</span><span class="p">,</span> <span class="s">'by'</span><span class="p">,</span> <span class="s">'bz'</span><span class="p">])</span>

<span class="n">dfsrv</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">()</span>
<span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">()</span>
<span class="n">ax</span> <span class="o">=</span> <span class="n">fig</span><span class="p">.</span><span class="n">add_subplot</span><span class="p">(</span><span class="mi">111</span><span class="p">,</span> <span class="n">projection</span><span class="o">=</span><span class="s">'3d'</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s">'EW (ft)'</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s">'NS (ft)'</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_zlabel</span><span class="p">(</span><span class="s">'TVD (ft)'</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">json_rec_to_df</span><span class="p">(</span><span class="n">df</span><span class="p">,</span> <span class="n">mylist</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">rec</span> <span class="ow">in</span> <span class="n">mylist</span><span class="p">:</span>
        <span class="n">jdata</span> <span class="o">=</span> <span class="n">json</span><span class="p">.</span><span class="n">loads</span><span class="p">(</span><span class="n">rec</span><span class="p">)</span>
        <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">([[</span><span class="n">jdata</span><span class="p">[</span><span class="s">'magneticField'</span><span class="p">][</span><span class="s">'timestamp'</span><span class="p">],</span> 
                            <span class="n">jdata</span><span class="p">[</span><span class="s">'magneticField'</span><span class="p">][</span><span class="s">'value'</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="mi">1000</span><span class="p">,</span>
                            <span class="n">jdata</span><span class="p">[</span><span class="s">'magneticField'</span><span class="p">][</span><span class="s">'value'</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="mi">1000</span><span class="p">,</span>
                            <span class="n">jdata</span><span class="p">[</span><span class="s">'magneticField'</span><span class="p">][</span><span class="s">'value'</span><span class="p">][</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="mi">1000</span><span class="p">,</span>
                            <span class="n">jdata</span><span class="p">[</span><span class="s">'accelerometer'</span><span class="p">][</span><span class="s">'timestamp'</span><span class="p">],</span>
                            <span class="n">jdata</span><span class="p">[</span><span class="s">'accelerometer'</span><span class="p">][</span><span class="s">'value'</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="p">(</span><span class="mi">1000</span><span class="o">/</span><span class="mf">9.80665</span><span class="p">),</span>
                            <span class="n">jdata</span><span class="p">[</span><span class="s">'accelerometer'</span><span class="p">][</span><span class="s">'value'</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="p">(</span><span class="mi">1000</span><span class="o">/</span><span class="mf">9.80665</span><span class="p">),</span>
                            <span class="n">jdata</span><span class="p">[</span><span class="s">'accelerometer'</span><span class="p">][</span><span class="s">'value'</span><span class="p">][</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="p">(</span><span class="mi">1000</span><span class="o">/</span><span class="mf">9.80665</span><span class="p">)]],</span>
                            <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">'btimestamp'</span><span class="p">,</span> <span class="s">'bx'</span><span class="p">,</span> <span class="s">'by'</span><span class="p">,</span> <span class="s">'bz'</span><span class="p">,</span>
                                     <span class="s">'gtimestamp'</span><span class="p">,</span> <span class="s">'gx'</span><span class="p">,</span> <span class="s">'gy'</span><span class="p">,</span> <span class="s">'gz'</span><span class="p">])</span>
    <span class="k">return</span> <span class="n">df</span>

<span class="k">def</span> <span class="nf">survey_calc</span><span class="p">(</span><span class="n">df</span><span class="p">):</span>
    <span class="n">df</span><span class="p">[</span><span class="s">'G'</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">'gx'</span><span class="p">]</span><span class="o">**</span><span class="mi">2</span> <span class="o">+</span> <span class="n">df</span><span class="p">[</span><span class="s">'gy'</span><span class="p">]</span><span class="o">**</span><span class="mi">2</span> <span class="o">+</span> <span class="n">df</span><span class="p">[</span><span class="s">'gz'</span><span class="p">]</span><span class="o">**</span><span class="mi">2</span><span class="p">)</span><span class="o">**</span><span class="mf">0.5</span>
    <span class="n">df</span><span class="p">[</span><span class="s">'B'</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">'bx'</span><span class="p">]</span><span class="o">**</span><span class="mi">2</span> <span class="o">+</span> <span class="n">df</span><span class="p">[</span><span class="s">'by'</span><span class="p">]</span><span class="o">**</span><span class="mi">2</span> <span class="o">+</span> <span class="n">df</span><span class="p">[</span><span class="s">'bz'</span><span class="p">]</span><span class="o">**</span><span class="mi">2</span><span class="p">)</span><span class="o">**</span><span class="mf">0.5</span>
    <span class="n">df</span><span class="p">[</span><span class="s">'Dip'</span><span class="p">]</span> <span class="o">=</span> <span class="mi">90</span> <span class="o">-</span> <span class="n">np</span><span class="p">.</span><span class="n">degrees</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">arccos</span><span class="p">((</span><span class="n">df</span><span class="p">.</span><span class="n">gx</span><span class="o">*</span><span class="n">df</span><span class="p">.</span><span class="n">bx</span> <span class="o">+</span> <span class="n">df</span><span class="p">.</span><span class="n">gy</span><span class="o">*</span><span class="n">df</span><span class="p">.</span><span class="n">by</span> <span class="o">+</span> <span class="n">df</span><span class="p">.</span><span class="n">gz</span><span class="o">*</span><span class="n">df</span><span class="p">.</span><span class="n">bz</span><span class="p">)</span> <span class="o">/</span> \
                                          <span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">G</span><span class="o">*</span><span class="n">df</span><span class="p">.</span><span class="n">B</span><span class="p">)))</span>
    <span class="n">df</span><span class="p">[</span><span class="s">'INC'</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">degrees</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">arccos</span><span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">gx</span> <span class="o">/</span> <span class="n">df</span><span class="p">.</span><span class="n">G</span><span class="p">))</span>
    <span class="n">df</span><span class="p">[</span><span class="s">'INC'</span><span class="p">]</span> <span class="o">=</span> <span class="nb">abs</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">'INC'</span><span class="p">]</span> <span class="o">-</span> <span class="mi">180</span><span class="p">)</span> <span class="c1">#Flip the axis so it lines up with the azimuth 
</span>    <span class="n">df</span><span class="p">[</span><span class="s">'AZI'</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">degrees</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">arctan2</span><span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">G</span><span class="o">*</span><span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">gy</span><span class="o">*</span><span class="n">df</span><span class="p">.</span><span class="n">bz</span> <span class="o">-</span> <span class="n">df</span><span class="p">.</span><span class="n">gz</span><span class="o">*</span><span class="n">df</span><span class="p">.</span><span class="n">by</span><span class="p">),</span>
                                      <span class="n">df</span><span class="p">.</span><span class="n">bx</span><span class="o">*</span><span class="n">df</span><span class="p">.</span><span class="n">G</span><span class="o">**</span><span class="mi">2</span> <span class="o">-</span> <span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">gx</span><span class="o">*</span><span class="n">df</span><span class="p">.</span><span class="n">bx</span> <span class="o">+</span> <span class="n">df</span><span class="p">.</span><span class="n">gy</span><span class="o">*</span><span class="n">df</span><span class="p">.</span><span class="n">by</span> <span class="o">+</span> \
                                                       <span class="n">df</span><span class="p">.</span><span class="n">gz</span><span class="o">*</span><span class="n">df</span><span class="p">.</span><span class="n">bz</span><span class="p">)</span><span class="o">*</span><span class="n">df</span><span class="p">.</span><span class="n">gx</span><span class="p">))</span> \
              <span class="o">+</span> <span class="n">np</span><span class="p">.</span><span class="n">where</span><span class="p">((</span><span class="n">df</span><span class="p">.</span><span class="n">gy</span><span class="o">*</span><span class="n">df</span><span class="p">.</span><span class="n">bz</span> <span class="o">-</span> <span class="n">df</span><span class="p">.</span><span class="n">gz</span><span class="o">*</span><span class="n">df</span><span class="p">.</span><span class="n">by</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">360</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
    <span class="n">df</span><span class="p">[</span><span class="s">'AZI'</span><span class="p">]</span> <span class="o">=</span> <span class="nb">abs</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="s">'AZI'</span><span class="p">]</span> <span class="o">-</span> <span class="mi">360</span><span class="p">)</span> <span class="c1">#Reverse the values
</span>    <span class="k">return</span> <span class="n">df</span>

<span class="k">def</span> <span class="nf">min_curve_calc</span><span class="p">(</span><span class="n">MD</span><span class="p">,</span> <span class="n">I1</span><span class="p">,</span> <span class="n">I2</span><span class="p">,</span> <span class="n">A1</span><span class="p">,</span> <span class="n">A2</span><span class="p">):</span>
    <span class="n">I1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">radians</span><span class="p">(</span><span class="n">I1</span><span class="p">)</span>
    <span class="n">I2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">radians</span><span class="p">(</span><span class="n">I2</span><span class="p">)</span>
    <span class="n">A1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">radians</span><span class="p">(</span><span class="n">A1</span><span class="p">)</span>
    <span class="n">A2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">radians</span><span class="p">(</span><span class="n">A2</span><span class="p">)</span>
    <span class="n">DLS</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arccos</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">cos</span><span class="p">(</span><span class="n">I2</span> <span class="o">-</span> <span class="n">I1</span><span class="p">)</span> <span class="o">-</span> <span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">sin</span><span class="p">(</span><span class="n">I1</span><span class="p">)</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="n">sin</span><span class="p">(</span><span class="n">I2</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="n">np</span><span class="p">.</span><span class="n">cos</span><span class="p">(</span><span class="n">A2</span><span class="o">-</span><span class="n">A1</span><span class="p">))))</span>
    <span class="n">RF</span> <span class="o">=</span> <span class="p">(</span><span class="mi">2</span><span class="o">/</span><span class="n">DLS</span><span class="p">)</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="n">tan</span><span class="p">(</span><span class="n">DLS</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span>
    <span class="n">NS</span> <span class="o">=</span> <span class="p">(</span><span class="n">MD</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">sin</span><span class="p">(</span><span class="n">I1</span><span class="p">)</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="n">cos</span><span class="p">(</span><span class="n">A1</span><span class="p">)</span> <span class="o">+</span> <span class="n">np</span><span class="p">.</span><span class="n">sin</span><span class="p">(</span><span class="n">I2</span><span class="p">)</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="n">cos</span><span class="p">(</span><span class="n">A2</span><span class="p">))</span> <span class="o">*</span> <span class="n">RF</span>
    <span class="n">EW</span> <span class="o">=</span> <span class="p">(</span><span class="n">MD</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">sin</span><span class="p">(</span><span class="n">I1</span><span class="p">)</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="n">sin</span><span class="p">(</span><span class="n">A1</span><span class="p">)</span> <span class="o">+</span> <span class="n">np</span><span class="p">.</span><span class="n">sin</span><span class="p">(</span><span class="n">I2</span><span class="p">)</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="n">sin</span><span class="p">(</span><span class="n">A2</span><span class="p">))</span> <span class="o">*</span> <span class="n">RF</span>
    <span class="n">TVD</span> <span class="o">=</span> <span class="p">(</span><span class="n">MD</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">cos</span><span class="p">(</span><span class="n">I1</span><span class="p">)</span> <span class="o">+</span> <span class="n">np</span><span class="p">.</span><span class="n">cos</span><span class="p">(</span><span class="n">I2</span><span class="p">))</span> <span class="o">*</span> <span class="n">RF</span>
    <span class="k">return</span> <span class="n">NS</span><span class="p">,</span> <span class="n">EW</span><span class="p">,</span> <span class="n">TVD</span><span class="p">,</span> <span class="n">DLS</span><span class="p">,</span> <span class="n">RF</span>

<span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
    <span class="n">data</span> <span class="o">=</span> <span class="n">s</span><span class="p">.</span><span class="n">recv</span><span class="p">(</span><span class="n">buffer_size</span><span class="p">)</span>
    <span class="n">mylist</span> <span class="o">=</span> <span class="n">data</span><span class="p">.</span><span class="n">decode</span><span class="p">(</span><span class="s">'utf-8'</span><span class="p">).</span><span class="n">split</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
    <span class="n">mylist</span> <span class="o">=</span> <span class="nb">filter</span><span class="p">(</span><span class="bp">None</span><span class="p">,</span> <span class="n">mylist</span><span class="p">)</span> <span class="c1">#mylist is now a filter object
</span>    
    <span class="n">df</span> <span class="o">=</span> <span class="n">json_rec_to_df</span><span class="p">(</span><span class="n">df</span><span class="p">,</span> <span class="n">mylist</span><span class="p">)</span>
    <span class="n">df</span> <span class="o">=</span> <span class="n">survey_calc</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

    <span class="k">try</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">keyboard</span><span class="p">.</span><span class="n">is_pressed</span><span class="p">(</span><span class="s">'space'</span><span class="p">):</span>
            <span class="n">time</span><span class="p">.</span><span class="n">sleep</span><span class="p">(</span><span class="mf">0.5</span><span class="p">)</span>
            <span class="n">dfsrv</span> <span class="o">=</span> <span class="n">dfsrv</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">:])</span>
            <span class="n">dfsrv</span><span class="p">[</span><span class="s">'MD'</span><span class="p">]</span> <span class="o">=</span> <span class="mi">100</span>
            <span class="k">print</span><span class="p">(</span><span class="n">dfsrv</span><span class="p">[[</span><span class="s">'MD'</span><span class="p">,</span> <span class="s">'INC'</span><span class="p">,</span> <span class="s">'AZI'</span><span class="p">,</span> <span class="s">'gx'</span><span class="p">,</span> <span class="s">'gy'</span><span class="p">,</span> <span class="s">'gz'</span><span class="p">,</span> <span class="s">'bx'</span><span class="p">,</span> <span class="s">'by'</span><span class="p">,</span> <span class="s">'bz'</span><span class="p">]][</span><span class="o">-</span><span class="mi">1</span><span class="p">:])</span>
            <span class="n">dfsrv</span><span class="p">[</span><span class="s">'I1'</span><span class="p">]</span> <span class="o">=</span> <span class="n">dfsrv</span><span class="p">[</span><span class="s">'INC'</span><span class="p">].</span><span class="n">shift</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
            <span class="n">dfsrv</span><span class="p">[</span><span class="s">'A1'</span><span class="p">]</span> <span class="o">=</span> <span class="n">dfsrv</span><span class="p">[</span><span class="s">'AZI'</span><span class="p">].</span><span class="n">shift</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
            <span class="n">resdf</span> <span class="o">=</span> <span class="n">dfsrv</span><span class="p">.</span><span class="nb">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">min_curve_calc</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="s">'MD'</span><span class="p">],</span> 
                                                         <span class="n">x</span><span class="p">[</span><span class="s">'I1'</span><span class="p">],</span>
                                                         <span class="n">x</span><span class="p">[</span><span class="s">'INC'</span><span class="p">],</span>
                                                         <span class="n">x</span><span class="p">[</span><span class="s">'A1'</span><span class="p">],</span>
                                                         <span class="n">x</span><span class="p">[</span><span class="s">'AZI'</span><span class="p">]),</span> 
                                                         <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span>
                                                         <span class="n">result_type</span><span class="o">=</span><span class="s">'expand'</span><span class="p">)</span>
            <span class="n">resdf</span><span class="p">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">'NS'</span><span class="p">,</span> <span class="s">'EW'</span><span class="p">,</span> <span class="s">'TVD'</span><span class="p">,</span> <span class="s">'DLS'</span><span class="p">,</span> <span class="s">'RF'</span><span class="p">]</span>
            <span class="n">resdf</span><span class="p">[</span><span class="s">'TVD'</span><span class="p">]</span> <span class="o">=</span> <span class="o">-</span><span class="n">resdf</span><span class="p">[</span><span class="s">'TVD'</span><span class="p">]</span>  
            <span class="n">df_final</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">concat</span><span class="p">([</span><span class="n">dfsrv</span><span class="p">,</span> <span class="n">resdf</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
            <span class="n">df_final</span><span class="p">[</span><span class="s">'NS'</span><span class="p">]</span> <span class="o">=</span> <span class="n">df_final</span><span class="p">[</span><span class="s">'NS'</span><span class="p">].</span><span class="n">cumsum</span><span class="p">()</span> 
            <span class="n">df_final</span><span class="p">[</span><span class="s">'EW'</span><span class="p">]</span> <span class="o">=</span> <span class="n">df_final</span><span class="p">[</span><span class="s">'EW'</span><span class="p">].</span><span class="n">cumsum</span><span class="p">()</span>
            <span class="n">df_final</span><span class="p">[</span><span class="s">'TVD'</span><span class="p">]</span> <span class="o">=</span> <span class="n">df_final</span><span class="p">[</span><span class="s">'TVD'</span><span class="p">].</span><span class="n">cumsum</span><span class="p">()</span>
            <span class="n">df_final</span><span class="p">[</span><span class="s">'DLS'</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">degrees</span><span class="p">(</span><span class="n">df_final</span><span class="p">[</span><span class="s">'DLS'</span><span class="p">])</span>
            <span class="n">df_final</span><span class="p">[</span><span class="s">'MD'</span><span class="p">]</span> <span class="o">=</span> <span class="n">df_final</span><span class="p">[</span><span class="s">'MD'</span><span class="p">].</span><span class="n">cumsum</span><span class="p">()</span>
            <span class="n">ax</span><span class="p">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">df_final</span><span class="p">[</span><span class="s">'EW'</span><span class="p">],</span> <span class="n">df_final</span><span class="p">[</span><span class="s">'NS'</span><span class="p">],</span> <span class="n">df_final</span><span class="p">[</span><span class="s">'TVD'</span><span class="p">])</span>
            <span class="n">plt</span><span class="p">.</span><span class="n">pause</span><span class="p">(</span><span class="mf">0.5</span><span class="p">)</span>
    <span class="k">except</span><span class="p">:</span>
        <span class="k">pass</span>

<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

:ET